name: CMake on multiple platforms

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            triplet: x64-windows
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            triplet: x64-linux
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            triplet: x64-linux
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: sudo apt update && sudo apt install -y ninja-build gcc g++ clang cmake

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: choco install ninja cmake

    - name: Setup vcpkg (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        git clone https://github.com/microsoft/vcpkg.git %GITHUB_WORKSPACE%\vcpkg
        call %GITHUB_WORKSPACE%\vcpkg\bootstrap-vcpkg.bat
    
    - name: Setup vcpkg (Linux/macOS)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        git clone https://github.com/microsoft/vcpkg.git ${{ github.workspace }}/vcpkg
        ./vcpkg/bootstrap-vcpkg.sh

    - name: Install dependencies using vcpkg (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        set VCPKG_ROOT=%GITHUB_WORKSPACE%\vcpkg
        cd %GITHUB_WORKSPACE%\ShadeTorrentApi
        set VCPKG_FEATURE_FLAGS=manifests
        %VCPKG_ROOT%\vcpkg install
    
    - name: Install dependencies using vcpkg (Linux/macOS)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        export VCPKG_ROOT="${{ github.workspace }}/vcpkg"
        cd "${{ github.workspace }}/ShadeTorrentApi"
        export VCPKG_FEATURE_FLAGS=manifests
        "$VCPKG_ROOT"/vcpkg install

    - name: Configure CMake
      run: >
        cmake -B build
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
        -DVCPKG_DEFAULT_TRIPLET=${{ matrix.triplet }}
        -S ${{ github.workspace }}/ShadeTorrentApi


    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: build
      run: ctest --build-config ${{ matrix.build_type }}
